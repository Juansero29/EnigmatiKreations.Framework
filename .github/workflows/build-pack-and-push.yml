# This is a basic workflow to help you get started with Actions

name: Build, Pack & Push NuGets

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-pack-and-push:
    # Set GitHub environement
    environment: packages

    # The type of runner that the job will run on
    runs-on: windows-latest

    # Setup Runner Environement Variables
    env:
      Solution_Name: EnigmatiKreations.Framework.sln
      Test_Project_Path: Tests\EnigmatiKreations.Framework.UnitTests\EnigmatiKreations.Framework.UnitTests.csproj
      PACKAGES_ACCESS_TOKEN: ${{ secrets.PACKAGES_ACCESS_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Install `msbuild` command
      - name: Install MSBuild
        uses: microsoft/setup-msbuild@v1.1

      # Install `dotnet` command
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      # Setup NuGet for use with actions
      - name: Setup NuGet restore
        uses: NuGet/setup-nuget@v1.0.7
        with:
          # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
          nuget-version: latest # optional, default is latest
          # NuGet API Key to configure.
          nuget-api-key: $env:PACKAGES_ACCESS_TOKEN
          # Source to scope the NuGet API Key to.
          nuget-api-key-source: https://nuget.pkg.github.com/Juansero29/index.json # optional

      # Add custom nuget source with credentials
      - shell: pwsh
        name: Update Custom Nuget Source Credentials
        run: nuget sources update -Name "github" -username "Juansero29" -password "$env:PACKAGES_ACCESS_TOKEN"
      
      # Restore Solution
      - name: Launch Nuget Restore
        run: nuget restore $env:Solution_Name

      # Build Solution
      - name: Build packages for Release
        run: msbuild $env:Solution_Name -t:rebuild -p:Configuration=Release

      # Pack All Projects Into Nugets
      - name: Pack NuGets
        run: msbuild $env:Solution_Name -t:pack -p:Configuration=Release

      # Push all created
      - shell: pwsh
        name: Push NuGets
        run: |
          dotnet nuget push .\EnigmatiKreations.Framework.ApiManager\bin\Release\*.nupkg --source "github" --api-key $env:PACKAGES_ACCESS_TOKEN
          dotnet nuget push .\EnigmatiKreations.Framework.Controls\bin\Release\*.nupkg --source "github" --api-key $env:PACKAGES_ACCESS_TOKEN
          dotnet nuget push .\EnigmatiKreations.Framework.Managers\bin\Release\*.nupkg --source "github" --api-key $env:PACKAGES_ACCESS_TOKEN
          dotnet nuget push .\EnigmatiKreations.Framework.MVVM\bin\Release\*.nupkg --source "github" --api-key $env:PACKAGES_ACCESS_TOKEN
          dotnet nuget push .\EnigmatiKreations.Framework.Persistence\bin\Release\*.nupkg --source "github" --api-key $env:PACKAGES_ACCESS_TOKEN
          dotnet nuget push .\EnigmatiKreations.Framework.Utils\bin\Release\*.nupkg --source "github" --api-key $env:PACKAGES_ACCESS_TOKEN
